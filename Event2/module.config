<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <moduleSections>
    <moduleSection>File</moduleSection>
	<moduleSection>EnvironmentVars</moduleSection>
	<moduleSection>Network</moduleSection>
	<moduleSection>StarupLocations</moduleSection>
  </moduleSections>
  <moduleSettings>
    <module name="File">
      <fingerprintscript>
        <![CDATA[{
    if ($item -match "windir")
    {
        $expandedPath = $item  -replace "windir", $env:windir
    }
    else
    {
        $expandedPath = $item
    }

    try
    {

        $file = Get-Item -Path $expandedPath -ErrorAction Stop

        $obj = [pscustomobject]@{"path" = $file.FullName
                                 "hash" = (Get-FileHash $file -Algorithm MD5 | Select-Object -ExpandProperty Hash)
                                 "timestamp" = $file.LastWriteTime
                                 "length" = $file.Length}

        Write-Output $obj

    }  
    catch
    {
        Write-Verbose "Cannot generate hash of $item"
    }
}]]>
      </fingerprintscript>
	  <serializeAs>
	  csv
	  </serializeAs>
      <data>
c:\autoexec.bat
c:\config.sys
windir\wininit.ini
windir\winstart.bat
windir\win.ini
windir\system.ini
windir\system\autoexec.nt
windir\system\config.nt
      </data>
    </module>
    <module name="EnvironmentVars">
      <fingerprintscript>
        <![CDATA[{
    [pscustomobject]@{"Name" = $item.Name.ToString(); "Value" = $item.Value.ToString()} | Write-Output
 }]]>
      </fingerprintscript>
	  <serializeAs>
	  csv
	  </serializeAs>
      <data />
    </module>
    <module name="Network">
      <fingerprintscript>
        <![CDATA[{
    $pattern = [regex]"(\S+)\s+(\S+):(\S+)\s+(\S*):(\S+)\s*(\S*)"
    
    $matches = $pattern.Match($item)

    $proto = [string]::Empty
    $localAddr = [string]::Empty
    $localPort = [string]::Empty
    $foreignAddr = [string]::Empty
    $foreignPort = [string]::Empty
    $state = [string]::Empty

    switch ($matches.Groups.Count)
    {   
        {$_-gt 6} {$state = $matches.Groups[6].Value}     
        {$_-gt 5} {$foreignPort = $matches.Groups[5].Value}
        {$_-gt 4} {$foreignAddr = $matches.Groups[4].Value}
        {$_-gt 3} {$localPort = $matches.Groups[3].Value}
        {$_-gt 2} {$localAddr = $matches.Groups[2].Value}
        {$_-gt 1} {$proto = $matches.Groups[1].Value}
    }

    $obj = [pscustomobject]@{"Proto" = $proto
                      "LocalAddress" = $localAddr
                      "LocalPort" = $localPort
                      "ForeignAddress" = $foreignAddr
                      "ForeignPort" = $foreignPort
                      "State" = $state}

    Write-Output $obj
}]]>
      </fingerprintscript>
	  <serializeAs>
	  json
	  </serializeAs>
      <data />
    </module>  
    <module name="StarupLocations">
      <fingerprintscript>
        <![CDATA[{
    $obj = Get-ChildItem -Path $item -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Name
    Write-Output $obj
}]]>
      </fingerprintscript>
	  <serializeAs>
	  csv
	  </serializeAs>
      <data>
hklm:\System\CurrentControlSet\Services
hklm:\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce
hkcu:\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce
hklm:\Software\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Notify
hklm:\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit
hklm:\Software\Microsoft\Windows\CurrentVersion\RunOnce
hklm:\Software\Microsoft\Windows\CurrentVersion\RunOnceEx
hklm:\Software\Microsoft\Windows\CurrentVersion\Run
hkcu:\Software\Microsoft\Windows\CurrentVersion\Run
hkcu:\Software\Microsoft\Windows\CurrentVersion\RunOnce
hkcu:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run
hklm:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run
hklm:\Software\Microsoft\Windows NT\CurrentVersion\Windows\load
hklm:\Software\Microsoft\Windows NT\CurrentVersion\Windows
hklm:\SOFTWARE\Microsoft\Windows\CurrentVersion\ShellServiceObjectDelayLoad
hklm:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\SharedTaskScheduler
C:\Documents and Settings\All Users\Start Menu\Programs\Startup  
	  </data>
    </module>
	</moduleSettings>
</configuration>	